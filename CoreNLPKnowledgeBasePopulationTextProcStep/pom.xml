<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">

	<modelVersion>4.0.0</modelVersion>
	<parent>
		<artifactId>TextProcApplication</artifactId>
		<groupId>es.uvigo.esei.sing</groupId>
		<version>1.0.0-SNAPSHOT</version>
	</parent>

	<artifactId>CoreNLPKnowledgeBasePopulationTextProcStep</artifactId>

	<name>CoreNLPKnowledgeBasePopulationTextProcStep</name>

	<dependencies>
		<dependency>
			<groupId>es.uvigo.esei.sing</groupId>
			<artifactId>TextProcStep</artifactId>
		</dependency>
		<dependency>
			<groupId>es.uvigo.esei.sing</groupId>
			<artifactId>stanford-corenlp</artifactId>
		</dependency>
		<!-- Needed for the CoreNLP SentimentAnnotator -->
		<dependency>
			<groupId>es.uvigo.esei.sing</groupId>
			<artifactId>ejml-shaded</artifactId>
		</dependency>
		<dependency>
			<groupId>org.apache.jena</groupId>
			<artifactId>jena-tdb2</artifactId>
		</dependency>
		<!-- We want to handle this Jena TDB2 dependency ourselves. See below -->
		<dependency>
			<groupId>com.github.jsonld-java</groupId>
			<artifactId>jsonld-java</artifactId>
		</dependency>
		<!-- For UriBuilder -->
		<dependency>
			<groupId>org.glassfish.jersey.core</groupId>
			<artifactId>jersey-client</artifactId>
		</dependency>
		<dependency>
			<!-- Required by Jersey to work -->
			<groupId>org.glassfish.jersey.inject</groupId>
			<artifactId>jersey-hk2</artifactId>
		</dependency>
	</dependencies>

	<build>
		<!-- Fix for Eclipse not running Ant in the compile phase. -->
		<!-- Adapted from https://stackoverflow.com/a/39712177/9366153 -->
		<pluginManagement>
			<plugins>
				<plugin>
					<groupId>org.eclipse.m2e</groupId>
					<artifactId>lifecycle-mapping</artifactId>
					<version>1.0.0</version>
					<configuration>
						<lifecycleMappingMetadata>
							<pluginExecutions>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>org.apache.maven.plugins</groupId>
										<artifactId>maven-antrun-plugin</artifactId>
										<versionRange>[1.8,)</versionRange>
										<goals>
											<goal>run</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<execute/>
									</action>
								</pluginExecution>
							</pluginExecutions>
						</lifecycleMappingMetadata>
					</configuration>
				</plugin>
			</plugins>
		</pluginManagement>

		<plugins>
			<plugin>
				<artifactId>maven-antrun-plugin</artifactId>
				<executions>
					<execution>
						<!-- This works around the JSON-LD library not being found in the remote central, -->
						<!-- even though it is there. For some reason the used Maven plugins fail to compute -->
						<!-- the correct download URL. -->
						<id>install-jsonld-lib</id>
						<phase>compile</phase>
						<goals>
							<goal>run</goal>
						</goals>
						<configuration>
							<target>
								<exec executable="mvn">
									<arg value="install:install-file"/>
									<arg value="-Dfile=${project.build.directory}/../../lib/jsonld-java-0.13.0.jar"/>
									<arg value="-DgroupId=com.github.jsonld-java"/>
									<arg value="-DartifactId=jsonld-java"/>
									<arg value="-Dversion=0.13.0"/>
									<arg value="-Dpackaging=jar"/>
								</exec>
							</target>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<artifactId>maven-dependency-plugin</artifactId>
			</plugin>
			<plugin>
				<artifactId>maven-surefire-plugin</artifactId>
				<configuration>
					<!-- Avoid java.lang.reflect.InaccessibleObjectException during tests -->
					<argLine>--add-opens es.uvigo.esei.sing.textproc.step.corenlpknowledgebasepopulation/es.uvigo.esei.sing.textproc.step.corenlpknowledgebasepopulation=ALL-UNNAMED</argLine>
				</configuration>
			</plugin>
			<plugin>
				<artifactId>maven-jar-plugin</artifactId>
				<configuration>
					<outputDirectory>${project.build.directory}/../../dist/lib</outputDirectory>
				</configuration>
			</plugin>
		</plugins>
	</build>
</project>
